#!/bin/bash
CONFIG_DIR=${PRODACCESS_CONFIG_DIR:-"$HOME/.config/prodaccess"}
PRODACCESS_USER_EMAIL=${PRODACCESS_USER_EMAIL:-"$USER@$HOST"}

setup() {
  if [ -z "$PRODACCESS_SERVER_URL" ]; then
    echo "Set a Server URL via exporting the environment variable PRODACCESS_SERVER_URL"
    exit 1
  fi
  if [ ! -d "$CONFIG_DIR" ]; then
    echo "Making prodaccess configuration dir at ${CONFIG_DIR}"
    mkdir "$CONFIG_DIR"
  fi
  echo "EMAIL: $PRODACCESS_USER_EMAIL"
  if [ ! -f "$CONFIG_DIR/$PRODACCESS_USER_EMAIL.key.gpg" ]; then
    echo "Generating key for creating CSR"
    local key=$(openssl genrsa 4096)
    echo "$key" | gpg \
      --recipient $PRODACCESS_USER_EMAIL \
      --output $CONFIG_DIR/$PRODACCESS_USER_EMAIL.key.gpg \
      --encrypt
  fi
}

decrypt_key() {
  gpg \
    --output $CONFIG_DIR/$PRODACCESS_USER_EMAIL.key \
    --decrypt $CONFIG_DIR/$PRODACCESS_USER_EMAIL.key.gpg
}

generate_csr() {
  openssl req -new -key $CONFIG_DIR/$PRODACCESS_USER_EMAIL.key \
    -out $CONFIG_DIR/$PRODACCESS_USER_EMAIL.csr
}

encrypt_to_server() {
  echo "Encrypting CSR to Server..."
  gpg \
    --output $CONFIG_DIR/$PRODACCESS_USER_EMAIL.csr.gpg \
    --sign --armour -r $PRODACCESS_SERVER_FINGERPRINT \
    --encrypt $CONFIG_DIR/$PRODACCESS_USER_EMAIL.csr
}

get_cert() {
  decrypt_key
  generate_csr | encrypt_to_server
  rm $CONFIG_DIR/$PRODACCESS_USER_EMAIL.key
  cat $CONFIG_DIR/$PRODACCESS_USER_EMAIL.csr.gpg
  rm $CONFIG_DIR/$PRODACCESS_USER_EMAIL.csr.gpg
  rm $CONFIG_DIR/$PRODACCESS_USER_EMAIL.csr
  # cat $CONFIG_DIR/$PRODACCESS_USER_EMAIL.csr.gpg | \
  #   curl \
  #   -X POST \
  #   -d "$(echo decrypt_key | generate_csr | encrypt_to_server)"
  #   $PRODACCESS_SERVER_URL > $CONFIG_DIR/$PRODACCESS_USER_EMAIL.cert
}

place_in_folders() {
  echo "Putting Client Certificates in folders"
}

setup
get_cert
